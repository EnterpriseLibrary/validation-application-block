<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
    <section name="validation" type="EnterpriseLibrary.Validation.Configuration.ValidationSettings, EnterpriseLibrary.Validation"/>
  </configSections>
  <validation>
    <type name="EnterpriseLibrary.Validation.TestSupport.TestClasses.TestObjectWithFailingAttributesOnProperties" defaultRuleset="RuleB">
      <ruleset name="RuleA">
        <properties>
          <property name="FailingProperty1">
            <validator name="validator1" type="EnterpriseLibrary.Validation.TestSupport.TestClasses.MockValidator, EnterpriseLibrary.Validation.TestSupport" returnFailure="true" messageTemplate="message-from-config1-RuleA"/>
            <validator name="validator2" type="EnterpriseLibrary.Validation.TestSupport.TestClasses.MockValidator, EnterpriseLibrary.Validation.TestSupport" returnFailure="true" messageTemplate="message-from-config2-RuleA"/>
            <validator name="validator3" type="EnterpriseLibrary.Validation.TestSupport.TestClasses.MockValidator, EnterpriseLibrary.Validation.TestSupport" returnFailure="false" messageTemplate="message-from-config3-RuleA"/>
          </property>
          <property name="FailingProperty2">
            <validator name="validator" type="EnterpriseLibrary.Validation.TestSupport.TestClasses.MockValidator, EnterpriseLibrary.Validation.TestSupport" returnFailure="false" messageTemplate="message-from-config4-RuleA"/>
          </property>
        </properties>
      </ruleset>
      <ruleset name="RuleB">
        <properties>
          <property name="FailingProperty1">
            <validator name="validator1" type="EnterpriseLibrary.Validation.TestSupport.TestClasses.MockValidator, EnterpriseLibrary.Validation.TestSupport" returnFailure="true" messageTemplate="message-from-config1"/>
            <validator name="validator3" type="EnterpriseLibrary.Validation.TestSupport.TestClasses.MockValidator, EnterpriseLibrary.Validation.TestSupport" returnFailure="false" messageTemplate="message-from-config3"/>
          </property>
          <property name="FailingProperty2">
            <validator name="validator" type="EnterpriseLibrary.Validation.TestSupport.TestClasses.MockValidator, EnterpriseLibrary.Validation.TestSupport" returnFailure="true" messageTemplate="message-from-config2"/>
          </property>
        </properties>
      </ruleset>
    </type>

    <type name="EnterpriseLibrary.Validation.TestSupport.TestClasses.TestObjectWithMultipleSourceValidationAttributesOnProperties" defaultRuleset="rule">
      <ruleset name="rule">
        <properties>
          <property name="PropertyWithDataAnnotationsAttributes">
            <validator name="validator" type="EnterpriseLibrary.Validation.TestSupport.TestClasses.MockValidator, EnterpriseLibrary.Validation.TestSupport" returnFailure="true" messageTemplate="configuration1"/>
          </property>
          <property name="PropertyWithVABOnlyAttributes">
            <validator name="validator" type="EnterpriseLibrary.Validation.TestSupport.TestClasses.MockValidator, EnterpriseLibrary.Validation.TestSupport" returnFailure="true" messageTemplate="configuration2"/>
          </property>
        </properties>
      </ruleset>
    </type>
  </validation>
  <unity>
    <typeAliases>
      <typeAlias alias="ObjectWithValidatorProperties" type="EnterpriseLibrary.Validation.Tests.UnityValidationExtensionFixture+ObjectWithValidatorProperties, EnterpriseLibrary.Validation.Tests" />
      <typeAlias alias="ObjectWithValidatorPropertiesAndNoAttributes" type="EnterpriseLibrary.Validation.Tests.UnityValidationExtensionFixture+ObjectWithValidatorPropertiesAndNoAttributes, EnterpriseLibrary.Validation.Tests" />
      <typeAlias alias="TestObjectWithFailingAttributesOnProperties" type="EnterpriseLibrary.Validation.TestSupport.TestClasses.TestObjectWithFailingAttributesOnProperties, EnterpriseLibrary.Validation.TestSupport" />
      <typeAlias alias="Validator" type="EnterpriseLibrary.Validation.Validator`1[[EnterpriseLibrary.Validation.TestSupport.TestClasses.TestObjectWithFailingAttributesOnProperties, EnterpriseLibrary.Validation.TestSupport]], EnterpriseLibrary.Validation" />
    </typeAliases>

    <namespace name="EnterpriseLibrary.Validation.Configuration.Unity" />
    <assembly name="EnterpriseLibrary.Validation" />

    <sectionExtension type="ValidationConfigExtension" />
    
    <containers>
      <container name="attributesOnly">
        <types>
          <type type="ObjectWithValidatorProperties">
              <property name="Val1">
                <validator validationSource="Attributes"/>
              </property>
              <property name="Val2">
                <validator validationSource="Attributes"/>
              </property>
          </type>
        </types>
      </container>
      <container name="configOnly">
        <types>
          <type type="ObjectWithValidatorProperties">
              <property name="Val1">
                <validator validationSource="Configuration"/>
              </property>
              <property name="Val2">
                <validator validationSource="Configuration"/>
              </property>
          </type>
        </types>
      </container>
      <container name="ruleSetA">
        <types>
          <type type="ObjectWithValidatorProperties">
              <property name="Val1">
                <validator ruleSet="RuleA"/>
              </property>
              <property name="Val2">
                <validator ruleSet="RuleA"/>
              </property>
          </type>
        </types>
      </container>
      <container name="attributesOnlyRuleSetA">
        <types>
          <type type="ObjectWithValidatorProperties">
              <property name="Val1">
                <validator ruleSet="RuleA" validationSource="Attributes"/>
              </property>
              <property name="Val2">
                <validator ruleSet="RuleA" validationSource="Attributes"/>
              </property>
          </type>
        </types>
      </container>
    </containers>
  </unity>
</configuration>